Import scripts:

they is processed by a CmImport method
which is executed if "RecordList" "Import"
menu command is selected.

SDref list contains a reference to "iscript*:*:<rectype>:"
SDref record with the Import Script text.

Import script is executed many times while
reading from a specified input stream text file,
until EOF.
Before starting Import, the user must open or
create a record with appropriate configuration
for the imported data - this record will be
updated and saved many times under new rkeys,
but no remake is possible inside of the
CustomImport method. If data of different structure
are to be imported, they must be provided in a
separate text file and read using another
apropriate import script after "remake" of the
GEMS database module, during another execution
of the "RecordList" "Import" menu command.

Structure of iscript:
(All words are case sensitive !!!)

<ISCRIPT>    =::  <FORMATS> ## <EQUATIONS> ##
<FORMATS>   =::  <STATEMENT> {, <STATEMENT> }
<STATEMENT> =::  <FORMAT> <DATA>  |
                 list  <FORMAT> #obj_name[sizeM,sizeM]
<FORMAT>    =::  %s | %nns | "characters" | EMPTY |
                 IREC | <OBJECT>
<DATA>    =::   <OBJECT> | #SKIP | #RKEY[i]
<OBJECT>    =:   #obj_name |  #obj_name[i] |  #obj_name[i,j]


Where:
        %s	         Read characters until a " "
        %nns	         Read nn characters from file (%7s)
        EMPTY            Put empty value
        IREC             Put current record number
        "characters"     Put string value   ("120")

        #obj_name        Data object label (indexes 0,0)
        #obj_name[i]     -/- (indexes i,0)
        #obj_name[i,j]   -/- (indexes i,j)

        #SKIP            Skips reading value
        #RKEY[i]         Set data to record key field number i

        list  <FORMAT> #obj_name[sizeN,sizeM]
           Setted sizeN*sizeM values for object
           obj_name as <FORMAT> (list %s #aiCpT[7,1])


       <EQUATIONS>    GEMS Math Script expressions

Any string started from $ ignored (comment line)

Example import script "iscript:0003:dcomp:"
--------------------------------------------------------
$ DComp for minerals (Gottschalk database)
$ Begin to import a data block for a new record
  %s #DCname,
  #DCname #RKEY[2],
$ Assignment of a field red from stream input to
$  #DCname and then to #RKEY[2]; if EOF then exit -
$ all data have been imported. Too long strings
$ should be truncated from right during assignment.
  %s #RKEY[0], %s #RKEY[1],
$ Assignment of a string constant "gt1" to RKEY[3]
  "gt1" #RKEY[3],
  %s #DCform,
$ If EOF anywhere inside of the data block - error!
  %s #H0d[0], %s #H0d[0,1], %s #S0d[0], %s #S0d[0,1],
  EMPTY #G0d[0], %s #SKIP, %s #SKIP, %s #SKIP,
$ Assignment of EMPTY value to #God[0]; skip two items
$ in the input stream
  %s #aiCpT[0,0], %s #aiCpT[1,0], %s #aiCpT[2,0],
  %s #aiCpT[3,0], %s #aiCpT[4,0], %s #aiCpT[5,0],
  %s #aiCpT[6,0],    %s #TCint[1,0],
     %s #V0d[0], %s #BetAlp[0,1],
     %s #SKIP, %s #SKIP, %s #SKIP,
     %s #SKIP, %s #SKIP, %s #SKIP, %s #SKIP
$ Math script (optional)
    ## H0d[0] =: H0d[0]*1000; H0d[1] =: H0d[1]*1000;
       TCint[0] =: 25; H0d[1] =: G0d[1];
       TCint[1] =: TCint[1] - 273.15;
    ##

Data:

wuestite s Wus FeO
  -264.162 0.053 58.983 0.058 298.15
  0 0 -1.9296E+01 3.0165E-02 0 1.5009E+03 0 -2.5333E+06 0 1373.15
  12.000 3.62E-05 0 0 200000 0 0  0 0
wollastonite(cyclo) s Wo Ca2[Si2O6]
 -3265.298 0.574 163.532 0.147
  1398.00 4.140 0.310 3.09318E+02 0 0 -2.0178E+03 0 -1.4708E+06 0 1398.00
  80.170 2.43E-05 0 0 66666.667 0 0  0 0
<eof>
