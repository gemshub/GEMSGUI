-------------- To do before September 2001 ---------------

- GTdemo: Fix a crash after calculation (or related to reading
  next record and opening the GraphDialog)
    On reading GTDemo records, a warning message appears on the
     console "GDRkl Old length=64 New length=58". Maybe, problems
     with dyn mem allocation?
  Done?

- GTdemo: change arrays x0 and y0 to double precision;
  implement saving of the background color for the graph into
  GTdemo record (if there is an unused dynamic DOD).
Done

- Process module: debug and re-implement connection to
  GtDemo sampler/plotter (important!) Check stepwise plotting
  during Process calculation

- Process module: create a "Math script library" (put SDref rec
  key to pSLkey object) from where one can copy an example script
  to Proces definition. This should be one or more special entries
  in default SDref database.


DBMS

     (0) Remove memory leaks!

Done 

     (1) Buttons for browsing and "Delete" instead of "X"
         "Remake", "Plot" and "Print" buttons
Done

Comments:
- Module screen form dialogs: add icons for "Browse" mode:
  "Next record" (arrow up), "Previous record" (arrow down),
  "Select this record" (paper sheet like in "Load" button),
  and "Set filter" for browsing through a subset of records.
  Remove BrowseDialog and attach its functionality to the
  module screen form dialogs.

Done
     (2) FileSelection dialog: implement "Ok to all" button for
         multiple insertions ("Move" and "copy" commands in
         "Record List")
comment:
         - In SelectDialog, add a "Ok to All" button and implement it
  for "Record List" "Move" or new "Copy" modes, so that all
  the selected records would go into the same file. Make sure
  that "Cancel" always works properly in SelectDialog - this
  bug is dangerous and causes trouble often.

Done
         Fix a bug: SelektDialog "Cancel" button does not work in some
            cases (i.e., in "Record" "Save As" mode of module
            dialogs when selecting a file where to put the record),
            this makes a lot of trouble.
Done

         - In SelectDialog, add a "Ok to All" button and implement it
  for "Record List" "Move" or new "Copy" modes, so that all
  the selected records would go into the same file. Make sure
  that "Cancel" always works properly in SelectDialog - this
  bug is dangerous and causes trouble often.

Done

     (3) Implement "Copy" command in "Record list" with
         a possibility of editing record keys before inserting
         records (ask where to insert at the beginning)

Comments:

- Module screen form dialogs: in menu "Record List", change
  "Browse" to "Copy". This menu item should work similar to
  "Move", but (i) let the user modify record key, then select
  the file where to put it for each copied record; (ii) do
  not delete the original record.

Done  
Fix a bug:
           After starting gems -d ... and exiting with
           "Save configuration", next start in usual mode
           gems -s -u works OK. But, if one opens any profile
           and then exits gems with "Save configuration", upon
           the next usual start, it crashes (EAccess) on pressing
           "Calculation of Equilibria" button. Debugger shows that
           stack is corrupt before the program really gets into
           the "Open Profile mode".

done

   - Brush up SDref module (remove bugs, fix "create/init" mode
     Debug window size of SDref


PROFILE CREATION AND EXTENSION

   - Re-think the sequence of steps for creation of new
     System profiles ("New Profile" from KeyProfile dialog).
     Implement a new function of copying files from one
     of existing user profile directories as a basis for
     a newly-created profile.
Done

   - check return point in case of rejecting new phase/dcomp
     configuration.
Done

   - check loss of data (x and u vectors) in SysEq record
     after profile extension.
Done

   - Implement a File Selection Listview dialog (for the
     kernel database) appearing on creation of new profiles,
     to avoid a time-consuming step of opening Icomp, Dcomp,
     .... modules for linking necessary database files.
     Cross-referencing between different user-created
     system profile directories must be avoided.
Done

   - Implement linking of a database file into existing
     profile (the file must exist inside of the profile
     directory).
done


   - Change Profile open function such that default over-
     ride mechanism applies BOTH to DComp and ReacDC rkeys
     (i.e. alphabetically first species is taken in the
     profile aq phase regardless of d or r source)(important! )
     (Profile and Phase records)

   Fix a bug:
   On re-opening profile after updating definitions of single-
   component phases in database, the warning contains correct
   phase key but wrong DComp key (the action itself is correct)

 Done
   - Desirable: To use one of yet unused dynamic objects in the
     Profile record format to keep text info about the author(s)
     of the model application and its brief description

  - More diagnostic messages should be displayed to inform the
     user about different stages of Profile opening/updating.

   - Implement BCC and IPM icon buttons on pages of System
     window for user's convenience.


------- Wish List for October-December 2001 --------------------

- Important!
  Stepwise mode of IPM calculations (multi-thread mode, A.Rysin)
  gems_t version

- GtDemo remake sequence: streamline and simplify, or
  better, develop a clear wizard analogous to that required
  for the Process definitions

- Process: to implement clear and consize wizard for
  setting up process definition, iterators and math
  scripts (difficult but very important)

- re-write the RTparam module, provide
  it also with math scripts and stepwise mode, improve on
  plotting functionality. I think, in this case the record
  format can be extended since we don't have many such recs
  in the database and they can easily be re-created.
  One graphdialog is sufficient, with a possibility to
  plot also experimental data (for fitting).

- Major re-arrangement is needed for the RTparm module and record
  structure: (a) convert "float" to "double" for calculated vectors,
  add TK vector for temperature in Kelvins and vectors for the empi-
  rical T,P data; (b) introduce MATH SCRIPT for supporting calculations,
  similar to GTDemo module, make DCthermo() and RCthermo() applicable
  to a given TP pair via the calls to the built-in thermdat(T,P,J),
  and getLogK(), getGr(), getHr(), getG0, getH0(), ... functions;
  (c) add into record the information for setup of graphs (four of them,
  or for one graph similar to GTdemo record), don't forget saving the
  background color; (d) write a "print" slot for printing-exporting
  the tabulated data to text files (again similar to GTdemo);
  This will make previous format of RTparm records unusable, but
  I don't believe that this is a real harm because RTparm records
  are not part of thermodynamic database as such, rather they should
  be used for analysing or fitting calculated T/P dependences.

REMAKE WIZARDS
- Major rewriting is needed for the "Remake/Create" mode of all
  modules. Existing switch lines and simple dialogs must be replaced
  with well-commented wizards and/or tab dialogs. Without doing this,
  there will be no chance to win users (except maybe a few enthusiasts)
  because "Remake/Create" mode is at the moment the most cryptic
  and the least user-friendly part of the whole GEMS code.

MISCELLANEOUS
   - Implement "Listview" access windows for setting up
     system definitions and examining the IPM results
     (important but requires programming)

   - Implement help on pressing F1 in lineedits in KeyFilter
     dialog, to get help pages separately on record key fields.

   - Check and re-format printout/export methods ::CmPrint()
     for modules and submodules - best using printout format
     scripts. At first step - trim auto printfile formats.
     Add print functions to IComp and other modules where
     not provided. Then need to think over the script syntax
     (similar to PmatchC or like sprintf?)

   it should also be possible to convert
   part of the MULTI vectors and arrays into the built-in
   functions (like molality() or molfract()) which should also
   be accessible from math scripts, and thus make the math and
   print/export scripts more transparent to the users.

------------------------------
   - Implement "Listview" access windows for setting up
     system ( must be editing)

