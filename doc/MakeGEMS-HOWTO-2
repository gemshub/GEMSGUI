*How to execute make operations for GEMS*

Widows, Linux, Mac

  
1. To produce Makefile for compiling debug version, use a command:  

   qmake gems_qt.pro 

All settings will be taken from Qt directory and .pro file
*.pri files contain lists of all *.h, *.cpp and *.ui files

gems_no_qt.pro -   builds a Makefile for compilation without Qt library
                   In this Makefile, all entries referring to Qt 
		   must be deleted
  
gems_qt_lib.pro -  builds a Makefile for compiling only Qt-dependent Gems library

gems_release.pro - builds a Makefile to compile a release version of Gems2
                   GEMS without debugging and *.ini read feature;
		   don't forget to run make clean before doing it
    
 
Supported platforms and compilers:

  win32-borland
  linux-g++
  linux-icc
  win32-msvc
  win32-msvc.net

To change platform, use command

  qmake -spec win32-borland gems_qt.pro > out.bat
or
  qmake -spec win32-msvc.net gems_qt.pro > out.bat

If you work in the msvc.net platform, edit Makefile and delete 
there compiler flags -w34100 and -w34189 from CXXFLAGS

2.The make script is located in /home/sveta/test/gems directory for linux
  or ./Gems2 directory for Windows

From this directory, different modes can be invoked by 
typing  make <target>    ( nmake for msvc.net )

The parameter <target> may be one of the following:


####### Build rules Windows 

  all:      create executable file

  mocables: create moc files
  uicables: execute uic command

  uiclean:  remove files prodused by uic command
  mocclean: remove files prodused by moc command
  clean:    do uiclean, mocclean and remove all object files files
  distclean: do clean and remove executable file
  

  dist:     make zip file for sourses


####### Build rules for Linux ( make -f Makefile.lin <coomand> )

  rpm      create rpm file
#	To prepare:
#	   copy data dirs (GEMS and GEMS.sys) into /usr/src/redhat/i386/BUILD
#	   copy gems source files into /usr/src/redhat/i386/BUILD
#	Type 
#	   'make rpm' (it will compile *optimized* version of gems 
#	               and create rpm)
#	   'rpm -U gems-0.99-4.rpm'
#	   'rpm -e gems'
#	RPM file is in /usr/src/redhat/RPMS/i386 
	  
	Note: optimized version of GEMS hasn't been tested thoroghly yet

  backup   creates a gems-YYYYmmdd.tar.bz2 of current directory

  backupd  creates a gems_data-YYYYmmdd.tar.bz2 of test database

  backup_win32	creates gems_code-YYYYmmdd.tar.bz2 containing only source code
	(usually used for transferring files to Win32 environment) 

  install	not implemented yet, and probably will never be :-(
  

'make RELEASE=YES' will make optimized release version of
                  GEMS without debugging and *.ini read feature;
		  don't forget to run make clean before doing it
		  
'make PROFILE=YES' will make GEMS with profile information 
		  don't forget to run make clean before doing it

    Note: I would only profile with optimized (at least -O) code,
	otherwise inline functions not inlined and you get not final picture

1999-2006 (c) Andy Rysin <arysin@yahoo.com>, S.Dmitrieva


